# Generated by Django 5.2.3 on 2025-08-17 15:41

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('symbol', models.CharField(db_index=True, max_length=20, unique=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('exchange', models.CharField(db_index=True, max_length=20)),
                ('sector', models.CharField(choices=[('TECH', 'Technology'), ('FIN', 'Financials'), ('HC', 'Healthcare'), ('IND', 'Industrials'), ('CONS', 'Consumer'), ('EN', 'Energy'), ('OTHER', 'Other')], db_index=True, default='OTHER', max_length=10)),
                ('current_price', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))])),
                ('previous_close', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))])),
                ('market_cap', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('price_last_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'db_table': 'portfolio_stocks',
                'indexes': [models.Index(fields=['symbol', 'exchange'], name='portfolio_s_symbol_7f93e3_idx'), models.Index(fields=['sector', 'is_active'], name='portfolio_s_sector_f4b2e8_idx'), models.Index(fields=['price_last_updated'], name='portfolio_s_price_l_322eb7_idx'), models.Index(fields=['is_active', 'updated_at'], name='portfolio_s_is_acti_ffde46_idx')],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_buy_price', models.DecimalField(decimal_places=4, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('price_when_added', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('planned_investment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('email_alerts_enabled', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('watch_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_watchers', to='portfolio.stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio_wishlist',
            },
        ),
        migrations.CreateModel(
            name='PriceAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert_type', models.CharField(choices=[('PRICE_ABOVE', 'Price Above Target'), ('PRICE_BELOW', 'Price Below Target')], default='PRICE_BELOW', max_length=20)),
                ('target_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('actual_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('TRIGGERED', 'Triggered'), ('DISABLED', 'Disabled')], default='TRIGGERED', max_length=10)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('wishlist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_history', to='portfolio.wishlist')),
            ],
            options={
                'db_table': 'portfolio_price_alerts',
            },
        ),
        migrations.CreateModel(
            name='PortfolioSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_invested', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('current_portfolio_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('total_gain_loss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('total_gain_loss_percentage', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('day_change_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('day_change_percentage', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('number_of_holdings', models.IntegerField(default=0)),
                ('largest_holding_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('sector_allocation', models.JSONField(default=dict)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_summary', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio_summary',
                'indexes': [models.Index(fields=['last_calculated'], name='portfolio_s_last_ca_bd7349_idx')],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shares_owned', models.DecimalField(decimal_places=4, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('purchase_price', models.DecimalField(decimal_places=4, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('purchase_date', models.DateField(db_index=True)),
                ('total_invested', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('target_allocation_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('notes', models.TextField(blank=True, null=True)),
                ('investment_thesis', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_holdings', to=settings.AUTH_USER_MODEL)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_holders', to='portfolio.stock')),
            ],
            options={
                'db_table': 'portfolio_holdings',
                'indexes': [models.Index(fields=['user', 'stock'], name='portfolio_h_user_id_0e9e5b_idx'), models.Index(fields=['user', 'purchase_date'], name='portfolio_h_user_id_2f7cfa_idx'), models.Index(fields=['stock', 'purchase_date'], name='portfolio_h_stock_i_c2e70e_idx'), models.Index(fields=['user', 'is_active'], name='portfolio_h_user_id_6d11d0_idx'), models.Index(fields=['is_active', 'updated_at'], name='portfolio_h_is_acti_7b86cc_idx')],
                'constraints': [models.UniqueConstraint(fields=('user', 'stock'), name='unique_user_stock_holding')],
            },
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['user', 'stock'], name='portfolio_w_user_id_3fc354_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['user', 'priority'], name='portfolio_w_user_id_b3cfa1_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['email_alerts_enabled', 'target_buy_price'], name='portfolio_w_email_a_f99ecb_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['user', 'is_active'], name='portfolio_w_user_id_a89950_idx'),
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('user', 'stock'), name='unique_active_user_stock_wishlist'),
        ),
        migrations.AddIndex(
            model_name='pricealert',
            index=models.Index(fields=['wishlist_item', 'created_at'], name='portfolio_p_wishlis_75fece_idx'),
        ),
        migrations.AddIndex(
            model_name='pricealert',
            index=models.Index(fields=['status', 'email_sent'], name='portfolio_p_status_a5fa4b_idx'),
        ),
        migrations.AddIndex(
            model_name='pricealert',
            index=models.Index(fields=['created_at', 'status'], name='portfolio_p_created_61810d_idx'),
        ),
    ]
