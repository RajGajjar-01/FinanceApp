version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-db2
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: myapp_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5425:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-container2
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network2
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis-cache2
    restart: unless-stopped
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network2
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight-gui2
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - app-network2
    depends_on:
      redis:
        condition: service_healthy

# Networks
networks:
  app-network2:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local
  redis_insight_data:
    driver: local